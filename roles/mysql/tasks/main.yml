#source common.sh

#if [ -z "${root_mysql_password}" ]; then
#echo "Variable root_mysql_password missing"
#exit 1
#fi

#print_head "disabling mysql default version"
#dnf module disable mysql -y &>>${LOG}
#status_check

#print_head "copy mysql repo file"
#cp ${script_location}/files/mysql.repo /etc/yum.repos.d/mysql.repo &>>${LOG}
#status_check

#print_head "installing mysql"
#yum install mysql-community-server -y &>>${LOG}
#status_check

#print_head "enabling and starting Mysql"
#systemctl enable mysqld &>>${LOG}
#systemctl restart mysqld
#status_check

#mysql_secure_installation --set-root-pass ${root_mysql_password} &>>${LOG}
#if [ $? -eq 1 ]; then
#echo "password is already changed"
#fi
#status_check


- name: disabling mysql default version
  ansible.builtin.shell: dnf module disable mysql

- name: Copying mysql repofile
  ansible.builtin.copy:
    src: mysql.repo
    dest: /etc/yum.repos.d/mysql.repo

- name: install mysql
  ansible.builtin.yum:
    name:  mysql-community-server
    state: installed

- name: enabling starting mysql
  ansible.builtin.systemd:
    name: mysqld
    state: restarted
    enabled: yes

- name: reset mysql password
  ansible.builtin.shell: mysql_secure_installation --set-root-pass ${root_mysql_password}
  register: out
  ignore_errors: yes
  vars:
   root_mysql_password: "{{ lookup('aws_ssm', "{{env}}.{{component}}.DB_ADMIN_PASSWORD", region='us-east-1' ) }}"